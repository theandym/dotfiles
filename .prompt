# Setup terminal prompt colors and layout

if [[ $COLORTERM = gnome-* && $TERM = xterm ]]  && infocmp gnome-256color >/dev/null 2>&1; then export TERM=gnome-256color
elif [[ $TERM != dumb ]] && infocmp xterm-256color >/dev/null 2>&1; then export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
  tput sgr0
  if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
    MAGENTA=$(tput setaf 196)
    ORANGE=$(tput setaf 208)
    GREEN=$(tput setaf 118)
    PURPLE=$(tput setaf 128)
    WHITE=$(tput setaf 15)
  else
    MAGENTA=$(tput setaf 1)
    ORANGE=$(tput setaf 3)
    GREEN=$(tput setaf 2)
    PURPLE=$(tput setaf 5)
    WHITE=$(tput setaf 7)
  fi
  BOLD=$(tput bold)
  RESET=$(tput sgr0)
else
    MAGENTA="\033[1;31m"
    ORANGE="\033[1;33m"
    GREEN="\033[1;32m"
    PURPLE="\033[1;35m"
    WHITE="\033[1;37m"
    BOLD=""
    RESET="\033[m"
fi

function git_dirty () {
  GIT_STATUS_MESSAGE=$(git status 2> /dev/null | tail -n1)

  [[
    ($GIT_STATUS_MESSAGE != "nothing to commit, working directory clean") 
    && ($GIT_STATUS_MESSAGE != "nothing to commit (working directory clean)")
  ]] && echo "*"
}

function git_branch () {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/ \1$(git_dirty)/"
}

PS1="\[$MAGENTA\]\u\[$ORANGE\]@\H\[$GREEN\]:\w\[$PURPLE\]\$(git_branch)\[$WHITE\] \$ \[$RESET\]"

#####

# Credits:
# https://github.com/gf3/dotfiles/blob/master/.bash_prompt
